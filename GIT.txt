Git - распределнная система управления версиями

Почему стоит использовать GIT
-Позволяет сохранять различные версии проектов
-Быстрый переход между различными версиями проекта
-Откат к предыдущим версиям при необходимости
-Улучшает процесс командной работы над одними и теми же проектами
-Независимая одновременная разработка различных новых функций в проекте

GIT - распределнная система контроля версий
Github - сервис хостинга git репозиториев

это Позволяет работать с git репозиториями локально даже без интернета

настройка git
git config --global user.name rrysbekov7
git config --global user.email blackfox.97@bk.ru

проверка настройки
git config --list

базовые команды 
pwd - показывает путь папки
cd ~/desktop - переход в папку
mkdir my-project - создание новой папки
cd my-project - переход в папку 
echo "some text" >file.txt - создание файла с текстом
ls - список файлов в папке
cat file.txt - просмотр файла
rm file.txt - удаление файла
cd.. - переходить в родительскую папку

git init - создание нового git репозитория

после инициализации создается скрытая папка .git

ls -la - отображение скрытых папок и файлов

практика
1) на рабочем столе создаем папку - далее открываем эту папку в терминале git bash
2) в этой папке пишем - git init 
3) ветка по умолчани. называется - master
4) git branch -m name - создание - это работает только после 1го коммита
5) cd . git -> ls - показывает содержимое папки 

Области тьмы
-Рабочая директория - область где мы видим наши файлы и папки проекта
-Индекс - область где мы подготоваливаем на сохранение новые файлы или измененные файлы в репозиторий
-Репозиторий - область где мы видим сохраненные данные в репозиторий и добавляется коммиты.

git status - команда для просмотра состояния статуса

после сохранение в репозиторий в папке objects который внутри папки git 
создаются новые под папки и там создаются файлы - хэш

git add name - команда для добавления файла в Индекс
git add . - добавляете в индекс всех файлов 

git commit - сохранить файлы и папки в репозиторий 
git checkout - перейти к определенной версии - коммита

статусы отслеживания файлов 
-untracked - неотслеживаемый - новые файлы и папки
-unmodified - немодифицированный - файлы и папки которые сохранили в репозиторий
-modified - модифицированный - файлы и папки которые мы изменили в репозиторий
-staged - подготовленный - файлы и папки которых добавили в индекс 

untracked --> staged --> unmodified --> modified

Объекты в GIT
-Blog - файлы - для файлов создается объект blob
-Tree - папка - для папок создается объект tree 
-Сommit - коммиты - при сохранении в репозитори создается объект commit
-Annotated Tag - аннотированный тег

Каждый объект в GIT имеет уникальный ID (sha1 хэш)

фиксированная длина хэша - 160бит -  40символов

хэш функция - берет данные из переменной длины и из них формирует 
данные из фиксированной длины (sha1)

объекты создаются на основаниии хэша sha1

Коммит содержит в себе 
Имя и email автора
Описание коммита
Родительский коммит
Дерево Коммит

head - это указатель на текущую версию проекта где она находится

ветка - это ссылка на дерево 
а дерево - это ссылка на коммит

git commit - m message -> создание коммита 
git checkout commit hash -> переход в определенную версию проекта по хэшу коммита - 5символов
git checkout branch name -> переход в определенную версию проекта по названию ветки

git log - показывает историю всех коммитов
git commit -m "First Commit"

git push
git pull

git remote add origin url
git branch -a

git clone url

origin - название удаленнго репозитория
git push -u origin branch
